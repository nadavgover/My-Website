{"version":3,"file":"static/js/283.34804e28.chunk.js","mappings":"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","sources":["chess-calculator-old-project/client/components/batch/scoreRadioGroup/ScoreRadio.jsx","chess-calculator-old-project/client/redux/batch/batch.actions.js","chess-calculator-old-project/client/components/batch/scoreRadioGroup/ScoreRadioGroup.jsx","chess-calculator-old-project/client/components/batch/GameCard.jsx","chess-calculator-old-project/client/components/batch/BatchResultList.jsx","chess-calculator-old-project/client/components/batch/Batch.jsx","chess-calculator-old-project/client/components/BatchApp.jsx","chess-calculator-old-project/client/components/navigation/NavBar.jsx","chess-calculator-old-project/client/components/sharedComponents/Result.jsx","chess-calculator-old-project/client/components/sharedComponents/ResultIcon.jsx","chess-calculator-old-project/client/constants/colors.js","chess-calculator-old-project/client/constants/inputs.js","chess-calculator-old-project/client/constants/rating.js","chess-calculator-old-project/client/constants/redux.js","chess-calculator-old-project/client/redux/batch/batch.types.js","chess-calculator-old-project/client/redux/oneVsOne/oneVsOne.types.js","chess-calculator-old-project/client/redux/oneVsOne/oneVsOne.reducer.js","chess-calculator-old-project/client/redux/batch/batch.reducer.js","chess-calculator-old-project/client/redux/root.reducer.js","chess-calculator-old-project/client/redux/store.js","chess-calculator-old-project/client/services/rating.service.js","chess-calculator-old-project/client/services/utils.service.js","chess-calculator-old-project/client/services/validation.service.js"],"sourcesContent":["import React, {useCallback, useState} from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport {makeStyles} from \"@material-ui/core\";\n\nimport {WIN_COLOR, TIE_COLOR, LOSS_COLOR} from \"../../../constants/colors\";\nimport {useSelector} from \"react-redux\";\nimport {FORM_KEYS} from \"../../../constants/redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    win: {\n        '&$checked': {\n            color: WIN_COLOR,\n        }\n    },\n    tie: {\n        '&$checked': {\n            color: TIE_COLOR,\n        }\n    },\n    loss: {\n        '&$checked': {\n            color: LOSS_COLOR,\n        }\n    },\n    checked: {}\n}))\n\nconst ScoreRadio = ({value, handleClick, score, gameNumber}) => {\n\n    const classes = useStyles()\n    const ratingChange = useSelector(({batch: {gameCards}}) => gameCards[gameNumber][FORM_KEYS.RATING_CHANGE])\n    const totalRatingChange = useSelector(({batch: {totalRatingChange}}) => totalRatingChange)\n\n    const handleClickLocal = useCallback(() => {\n        handleClick(value, ratingChange, totalRatingChange)\n    }, [value, ratingChange, totalRatingChange, gameNumber])\n\n    return (\n        <Radio\n            checked={score === value}\n            onClick={handleClickLocal}\n            value={value}\n            classes={{root: classes[value], checked: classes.checked}}\n        />\n    )\n}\n\nexport default ScoreRadio","import {BATCH_ACTION_TYPES} from \"./batch.types\";\n\nexport const setBatchFormData = payload => {\n    return {\n        type: BATCH_ACTION_TYPES.SET_BATCH_FORM_DATA,\n        payload: payload\n    }\n}\n\nexport const setTotalRatingChange = payload => {\n    return {\n        type: BATCH_ACTION_TYPES.SET_TOTAL_RATING_CHANGE,\n        payload: payload\n    }\n}\n\nexport const resetAllRatingChanges = () => {\n    return {\n        type: BATCH_ACTION_TYPES.RESET_ALL_RATING_CHANGES\n    }\n}\n\nexport const setGameData = payload => {\n    return {\n        type: BATCH_ACTION_TYPES.SET_GAME_DATA,\n        payload: payload\n    }\n}\n\nexport const addGame = () => {\n    return {\n        type: BATCH_ACTION_TYPES.ADD_GAME\n    }\n}\n\nexport const removeGame = payload => {\n    return {\n        type: BATCH_ACTION_TYPES.REMOVE_GAME,\n        payload: payload\n    }\n}","import React, {useCallback} from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ScoreRadio from \"./ScoreRadio\";\nimport {makeStyles} from \"@material-ui/core\";\n\nimport {scores} from \"../../../constants/rating\";\nimport {capitalizeFirstLetter} from \"../../../services/utils.service\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setGameData, setTotalRatingChange} from \"../../../redux/batch/batch.actions\";\nimport {FORM_KEYS} from \"../../../constants/redux\";\n\nconst useStyles = makeStyles({\n    firstRadio: {\n        marginLeft: 0\n    }\n})\n\nconst ScoreRadioGroup = ({gameNumber}) => {\n    const classes = useStyles()\n    const score = useSelector(({batch: {gameCards}}) => gameCards[gameNumber].score)\n    const dispatch = useDispatch()\n\n    const handleClick = useCallback((value, ratingChange, totalRatingChange) => {\n        if (ratingChange && score !== value){\n            dispatch(setGameData({\n                gameNumber: gameNumber,\n                key: FORM_KEYS.RATING_CHANGE,\n                value: NaN\n            }))\n        }\n        if(totalRatingChange && score !== value){\n            dispatch(setTotalRatingChange(NaN))\n        }\n        dispatch(setGameData({\n            gameNumber: gameNumber,\n            key: \"score\",\n            value: value\n        }))\n    }, [score, gameNumber])\n\n    return (\n        <div>\n            <FormControlLabel\n                control={<ScoreRadio value={scores.WIN.STR} score={score} handleClick={handleClick} gameNumber={gameNumber}/>}\n                label={capitalizeFirstLetter(scores.WIN.STR)}\n                labelPlacement=\"top\"\n                className={classes.firstRadio}\n            />\n            <FormControlLabel\n                control={<ScoreRadio value={scores.TIE.STR} score={score} handleClick={handleClick} gameNumber={gameNumber}/>}\n                label={capitalizeFirstLetter(scores.TIE.STR)}\n                labelPlacement=\"top\"\n            />\n            <FormControlLabel\n                control={<ScoreRadio value={scores.LOSS.STR} score={score} handleClick={handleClick} gameNumber={gameNumber}/>}\n                label={capitalizeFirstLetter(scores.LOSS.STR)}\n                labelPlacement=\"top\"\n            />\n        </div>\n    );\n}\n\nexport default ScoreRadioGroup","import React, {useCallback, Fragment} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport ScoreRadioGroup from \"./scoreRadioGroup/ScoreRadioGroup\";\nimport {ERROR_MSG, INPUTS} from \"../../constants/inputs\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FORM_KEYS} from \"../../constants/redux\";\nimport {removeGame, setGameData, setTotalRatingChange} from \"../../redux/batch/batch.actions\";\nimport {isRatingValid} from \"../../services/validation.service\";\nimport ResultIcon from \"../sharedComponents/ResultIcon\";\nimport Result from \"../sharedComponents/Result\";\nimport {capitalizeFirstLetter, round} from \"../../services/utils.service\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 250,\n        margin: theme.spacing(),\n        position: \"relative\"\n    },\n    title: {\n        fontSize: 14,\n    },\n    clearButton: {\n        position: \"absolute\",\n        right: theme.spacing(0.5),\n        top: theme.spacing(0.5),\n    },\n    icon: {\n        width: 15,\n        height: 15\n    },\n    listItem: {\n        paddingLeft: 0,\n        paddingBottom: 0\n    }\n}));\n\nconst GameCard = ({gameNumber}) => {\n    const classes = useStyles();\n    const opponentRating = useSelector(({batch: {gameCards}}) => gameCards[gameNumber][FORM_KEYS.OPPONENT_RATING])\n    const opponentRatingValid = useSelector(({batch: {gameCards}}) => gameCards[gameNumber][FORM_KEYS.OPPONENT_RATING_VALID])\n    const ratingChange = useSelector(({batch: {gameCards}}) => gameCards[gameNumber].ratingChange)\n    const totalRatingChange = useSelector(({batch: {totalRatingChange}}) => totalRatingChange)\n    const score = useSelector(({batch: {gameCards}}) => gameCards[gameNumber].score)\n\n    const dispatch = useDispatch()\n    const handleOpponentRatingChange = useCallback(e => {\n        if(ratingChange){\n            dispatch(setGameData({\n                gameNumber: gameNumber,\n                key: FORM_KEYS.RATING_CHANGE,\n                value: NaN\n            }))\n        }\n        if(totalRatingChange){\n            dispatch(setTotalRatingChange(NaN))\n        }\n        dispatch(setGameData({\n            gameNumber: gameNumber,\n            key: FORM_KEYS.OPPONENT_RATING,\n            value: e.target.value\n        }))\n    }, [gameNumber, ratingChange, totalRatingChange])\n\n    const focusOutHandler = useCallback(() => {\n        dispatch(setGameData({\n            gameNumber: gameNumber,\n            key: FORM_KEYS.OPPONENT_RATING_VALID,\n            value: isRatingValid(opponentRating.trim())\n        }))\n    }, [gameNumber, opponentRating])\n\n    const handleRemove = useCallback(() => {\n        dispatch(setTotalRatingChange(NaN))\n        dispatch(removeGame({gameNumber: gameNumber}))\n    }, [gameNumber])\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {`Game ${gameNumber + 1}`}\n                </Typography>\n                <IconButton size=\"small\"\n                            aria-label=\"clear card\"\n                            component=\"span\"\n                            className={classes.clearButton}\n                            onClick={handleRemove}\n                >\n                    <ClearIcon className={classes.icon}/>\n                </IconButton>\n                <ScoreRadioGroup gameNumber={gameNumber}/>\n                <TextField label={INPUTS.OPPONENT_RATING}\n                           value={opponentRating}\n                           onChange={handleOpponentRatingChange}\n                           onBlur={focusOutHandler}\n                           color=\"primary\"\n                           error={!opponentRatingValid}\n                           helperText={!opponentRatingValid && ERROR_MSG.RATING}\n                />\n                {(!!ratingChange || ratingChange === 0) &&\n                <List >\n                    <ListItem className={classes.listItem}>\n                        <ResultIcon score={score} list/>\n                        <ListItemText primary={capitalizeFirstLetter(score)}\n                                      secondary={<Result result={round(ratingChange)}/>}/>\n                    </ListItem>\n                </List>\n                }\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default GameCard","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport FunctionsIcon from '@material-ui/icons/Functions';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {round} from \"../../services/utils.service\";\nimport Result from \"../sharedComponents/Result\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector} from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    text: {\n        textAlign: \"center\"\n    }\n}));\n\nconst BatchResultList = () => {\n    const classes = useStyles()\n    const totalRatingChange = useSelector(({batch: {totalRatingChange}}) => totalRatingChange)\n    const totalRatingChangeRounded = round(totalRatingChange)\n    return (\n        <div>\n            <Typography variant=\"body1\" className={classes.text}>Results</Typography>\n            <List className={classes.root}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <FunctionsIcon color=\"primary\" />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Total Rating Change\"\n                                  secondary={<Result result={totalRatingChangeRounded}/>}/>\n                </ListItem>\n            </List>\n        </div>\n    )\n}\n\nexport default BatchResultList","import React, {Fragment, useCallback} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {ERROR_MSG, INPUTS} from \"../../constants/inputs\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@material-ui/icons/Add';\nimport GameCard from \"./GameCard\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\nimport {FORM_KEYS} from \"../../constants/redux\";\nimport {\n    setBatchFormData,\n    resetAllRatingChanges,\n    addGame,\n    setGameData,\n    setTotalRatingChange\n} from \"../../redux/batch/batch.actions\";\nimport {isRatingValid, isTimeControlValid} from \"../../services/validation.service\";\nimport BatchResultList from \"./BatchResultList\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {calculateRatingChange} from \"../../services/rating.service\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(),\n            width: '25ch',\n            display: \"block\",\n        },\n    },\n    text: {\n        textAlign: \"center\",\n        marginTop: theme.spacing()\n    },\n    addButton: {\n        margin: theme.spacing(),\n        width: 250,\n    },\n    submitButton: {\n        margin: theme.spacing(),\n        width: 250,\n        display: \"block\"\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nconst Batch = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const formValues = useSelector(({batch: {form}}) => form, shallowEqual)\n    const totalRatingChange = useSelector(({batch: {totalRatingChange}}) => totalRatingChange)\n    const gameCardsList = useSelector(({batch: {gameCards}}) => gameCards, shallowEqual)\n\n    const gameCardsComponents = gameCardsList.map((card, i) => <GameCard gameNumber={i} key={card.reactKey}/>);\n\n    const commonChangeHandlerHandler = useCallback((totalRatingChange, formKey, e) => {\n        if(totalRatingChange){\n            dispatch(resetAllRatingChanges())\n        }\n        dispatch(setBatchFormData({\n            key: formKey,\n            value: e.target.value\n        }))\n    }, [])\n\n    const commonFocusOutHandler = useCallback((validationFn, stateKey, stateKeyValid) => {\n        const value = formValues[stateKey].trim()\n        dispatch(setBatchFormData({\n            key: stateKeyValid,\n            value: validationFn(value)\n        }))\n    }, [formValues])\n\n    const handleMyRatingFocusOut = useCallback(e => {\n        commonFocusOutHandler(isRatingValid, FORM_KEYS.MY_RATING, FORM_KEYS.MY_RATING_VALID)\n    }, [formValues])\n\n    const handleMyRatingChange = useCallback(e => {\n        commonChangeHandlerHandler(totalRatingChange, FORM_KEYS.MY_RATING, e)\n    }, [totalRatingChange, formValues])\n\n    const handleTimeControlFocusOut = useCallback(e => {\n        commonFocusOutHandler(isTimeControlValid, FORM_KEYS.TIME_CONTROL, FORM_KEYS.TIME_CONTROL_VALID)\n    }, [formValues])\n\n\n    const handleTimeControlChange = useCallback(e => {\n        commonChangeHandlerHandler(totalRatingChange, FORM_KEYS.TIME_CONTROL, e)\n    }, [totalRatingChange])\n\n    const allInputsAreValid = () => {\n        const myRatingValid = formValues[FORM_KEYS.MY_RATING_VALID] && !!formValues[FORM_KEYS.MY_RATING]\n        const timeControlValid = formValues[FORM_KEYS.TIME_CONTROL_VALID]  && !!formValues[FORM_KEYS.TIME_CONTROL]\n        const allOpponentRatingsValid = gameCardsList.reduce((totalValid, card) => {\n            return totalValid && card[FORM_KEYS.OPPONENT_RATING_VALID] && !!card[FORM_KEYS.OPPONENT_RATING]\n        }, true)\n        return myRatingValid && timeControlValid && allOpponentRatingsValid\n    }\n\n    const handleSubmit = useCallback(() => {\n        const myRating = formValues[FORM_KEYS.MY_RATING].trim()\n        const timeControl = formValues[FORM_KEYS.TIME_CONTROL].trim()\n        if(allInputsAreValid()) {\n            const allRatingChanges = gameCardsList.map((card, i) => {\n                const opponentRating = card[FORM_KEYS.OPPONENT_RATING].trim()\n                const score = card.score\n                const ratingChange = calculateRatingChange(myRating, opponentRating, timeControl, score)\n                dispatch(setGameData({\n                    gameNumber: i,\n                    key: FORM_KEYS.RATING_CHANGE,\n                    value: ratingChange\n                }))\n                return ratingChange\n            })\n            const totalRatingChangeCalculated = allRatingChanges.reduce((acc, ratingChange) => {\n                return acc + ratingChange\n            }, 0)\n            dispatch(setTotalRatingChange(totalRatingChangeCalculated))\n        }\n    }, [gameCardsList, formValues])\n\n    const handleAddCard = useCallback(() => {\n        dispatch(addGame())\n        dispatch(setTotalRatingChange(NaN))\n    }, [])\n\n    return (\n        <div>\n            <Typography variant=\"body1\" className={classes.text}>Batch Calculator</Typography>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField label={INPUTS.MY_RATING}\n                           value={formValues[FORM_KEYS.MY_RATING]}\n                           onChange={handleMyRatingChange}\n                           onBlur={handleMyRatingFocusOut}\n                           color=\"primary\"\n                           error={!formValues[FORM_KEYS.MY_RATING_VALID]}\n                           helperText={!formValues[FORM_KEYS.MY_RATING_VALID] && ERROR_MSG.RATING}\n                />\n                <TextField label={INPUTS.TIME_CONTROL}\n                           value={formValues[FORM_KEYS.TIME_CONTROL]}\n                           onChange={handleTimeControlChange}\n                           onBlur={handleTimeControlFocusOut}\n                           color=\"primary\"\n                           placeholder={INPUTS.TIME_CONTROL_PLACEHOLDER}\n                           error={!formValues[FORM_KEYS.TIME_CONTROL_VALID]}\n                           helperText={!formValues[FORM_KEYS.TIME_CONTROL_VALID] && ERROR_MSG.TIME_CONTROL}\n                />\n            </form>\n            {gameCardsComponents}\n            <Button variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={handleAddCard}\n                    className={classes.addButton}\n                    startIcon={<AddIcon />}\n            >\n                {INPUTS.ADD}\n            </Button>\n            <Button variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    className={classes.submitButton}\n            >\n                {INPUTS.SUBMIT}\n            </Button>\n            {(!!totalRatingChange || totalRatingChange === 0) &&\n            <Fragment>\n                <Divider variant=\"middle\" className={classes.divider}/>\n                <BatchResultList />\n            </Fragment>\n            }\n        </div>\n    )\n}\n\nexport default Batch","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport store from \"../redux/store\";\nimport NavBar from \"./navigation/NavBar\";\nimport Batch from \"./batch/Batch\";\n\nconst BatchApp = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        <NavBar/>\n        <Batch/>\n      </div>\n\n    </Provider>\n  )\n};\n\nexport default BatchApp;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {routes} from \"../../constants/routes\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    link: {\n        textDecoration: \"none\",\n        color: \"black\"\n    }\n}));\n\nconst NavBar = () => {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = !!anchorEl;\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\"\n                                className={classes.menuButton}\n                                color=\"inherit\"\n                                aria-label=\"menu\"\n                                onClick={handleMenu}>\n                        <MoreVertIcon/>\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <Link to={routes.ONE_VS_ONE} className={classes.link}>\n                            <MenuItem onClick={handleClose}>1 vs 1</MenuItem>\n                        </Link>\n                        <Link to={routes.BATCH} className={classes.link}>\n                            <MenuItem onClick={handleClose}>Batch</MenuItem>\n                        </Link>\n                    </Menu>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Chess Rating Calculator\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default NavBar","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport {WIN_COLOR, LOSS_COLOR, TIE_COLOR} from \"../../constants/colors\";\nimport {scores} from \"../../constants/rating\";\n\nconst useStyles = makeStyles((theme) => ({\n    win: {\n        color: WIN_COLOR\n    },\n    loss: {\n        color: LOSS_COLOR\n    },\n    tie: {\n        color: TIE_COLOR\n    }\n}))\n\n\n\nconst Result = ({result}) => {\n    const classes = useStyles()\n    const resultClassName = result >= 0\n        ?\n        result > 0 ?\n            scores.WIN.STR\n            :\n            scores.TIE.STR\n        :\n        scores.LOSS.STR\n    const resultWithSign = result >= 0 ? `+${result}` : result\n    return(\n        <span className={classes[resultClassName]}>\n            {resultWithSign}\n        </span>\n    )\n}\n\nexport default Result","import React from 'react';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\n\nimport {scores} from \"../../constants/rating\";\n\nconst ResultIcon = ({score, list = false, color = \"primary\"}) => {\n    const iconObj = {\n        [scores.WIN.STR]: <ThumbUpIcon color={color} />,\n        [scores.TIE.STR]: <ThumbsUpDownIcon color={color} />,\n        [scores.LOSS.STR]: <ThumbDownIcon color={color} />\n    }\n    const icon = iconObj[score]\n    return list ?\n        <ListItemAvatar>\n            <Avatar>\n                {icon}\n            </Avatar>\n        </ListItemAvatar>\n        :\n        icon\n}\n\nexport default ResultIcon","export const WIN_COLOR = \"#629924\"\nexport const TIE_COLOR = \"#D59020\"\nexport const LOSS_COLOR = \"#CC3333\"\n","export const INPUTS = {\n    MY_RATING: \"My rating\",\n    OPPONENT_RATING: \"Opponent's rating\",\n    TIME_CONTROL: \"Time Control\",\n    TIME_CONTROL_PLACEHOLDER: \"Example: 50+10\",\n    SUBMIT: \"Submit\",\n    ADD: \"Add game\"\n}\n\nexport const ERROR_MSG = {\n    RATING: \"Rating must be a 4 digit number greater than 1200\",\n    TIME_CONTROL: \"Time control should be in format of a minutes+seconds and the sum of minutes plus seconds should be greater than 20. Example: 50+10\"\n}","export const scores = {\n    WIN: {\n        STR: \"win\",\n        NUM: 1},\n    TIE: {\n        STR: \"tie\",\n        NUM: 0.5\n    },\n    LOSS: {\n        STR: \"loss\",\n        NUM: 0\n    }\n}\n\nexport const ratingDifferenceLimits = {\n    UPPER: {\n        LIMIT: 750,\n        D: 400},\n    LOWER: {\n        LIMIT: 375,\n        D: 375\n    }\n}\n\nexport const timeControls = {\n    CLASSICAL: \"classical\",\n    MIDDLE: \"middle\",\n    RAPID: \"rapid\",\n    SEPARATOR: \"+\",\n    MINUTES_IN_60_MOVES: {\n        CLASSICAL: 120,\n        MIDDLE: 60,\n        RAPID: 20\n    }\n}\n\nexport const bonus = {\n    LIMIT: 2300,\n    NO_BONUS: 0,\n    DIVIDERS: {\n        CLASSICAL: 2000,\n        REST: 4000\n    }\n}\n\nexport const KLimits = {\n    MAX: {\n        LIMIT: 2200,\n        CLASSICAL: 10,\n        MIDDLE: 6,\n        RAPID: 3\n    },\n    HIGH: {\n        LIMIT: 1750,\n        CLASSICAL: 12,\n        MIDDLE: 8,\n        RAPID: 5\n    },\n    LOW: {\n        LIMIT: 1550,\n        CLASSICAL: 14,\n        MIDDLE: 10,\n        RAPID: 7\n    },\n    MIN: {\n        LIMIT: 1200,\n        CLASSICAL: 14,\n        MIDDLE: 11,\n        RAPID: 8\n    }\n}\n\nexport const changeCoefficients = {\n    DIVIDER: 400,\n    MULTIPLIER: 2,\n    SUBTRACT: 1\n}","export const FORM_KEYS = {\n    MY_RATING: \"myRating\",\n    MY_RATING_VALID: \"myRatingValid\",\n    OPPONENT_RATING: \"opponentRating\",\n    OPPONENT_RATING_VALID: \"opponentRatingValid\",\n    TIME_CONTROL: \"timeControl\",\n    TIME_CONTROL_VALID: \"timeControlValid\",\n    RATING_CHANGE: \"ratingChange\"\n}\n","export const BATCH_ACTION_TYPES = {\n    SET_BATCH_FORM_DATA: \"SET_BATCH_FORM_DATA\",\n    SET_TOTAL_RATING_CHANGE: \"SET_TOTAL_RATING_CHANGE\",\n    RESET_ALL_RATING_CHANGES: \"RESET_ALL_RATING_CHANGES\",\n    SET_GAME_DATA: \"SET_GAME_DATA\",\n    ADD_GAME: \"ADD_GAME\",\n    REMOVE_GAME: \"REMOVE_GAME\"\n}","export const ONE_VS_ONE_ACTION_TYPES = {\n    SET_ONE_VS_ONE_FORM_DATA: 'SET_ONE_VS_ONE_FORM_DATA',\n    SET_RATING_CHANGE: 'SET_RATING_CHANGE'\n}","import {ONE_VS_ONE_ACTION_TYPES} from \"./oneVsOne.types\";\nimport {FORM_KEYS} from \"../../constants/redux\";\n\nconst initialState = {\n    form: {\n        [FORM_KEYS.MY_RATING]: \"\",\n        [FORM_KEYS.MY_RATING_VALID]: true,\n        [FORM_KEYS.OPPONENT_RATING]: \"\",\n        [FORM_KEYS.OPPONENT_RATING_VALID]: true,\n        [FORM_KEYS.TIME_CONTROL]: \"\",\n        [FORM_KEYS.TIME_CONTROL_VALID]: true\n    },\n    ratingChange: {}\n}\n\nconst oneVsOneReducer = (state = initialState, {type: actionType, payload = {}}) => {\n    const actionHandler = {\n        [ONE_VS_ONE_ACTION_TYPES.SET_ONE_VS_ONE_FORM_DATA]: {\n            ...state,\n            form: {\n                ...state.form,\n                [payload.key]: payload.value\n            }\n        },\n        [ONE_VS_ONE_ACTION_TYPES.SET_RATING_CHANGE]: {\n            ...state,\n            ratingChange: payload\n        }\n    }\n    return actionHandler[actionType] || state\n}\n\nexport default oneVsOneReducer","import {BATCH_ACTION_TYPES} from \"./batch.types\";\nimport {FORM_KEYS} from \"../../constants/redux\";\nimport {scores} from \"../../constants/rating\";\nimport {generateUuid} from \"../../services/utils.service\";\n\n\nconst createNewGameCard = () => ({\n    score: scores.WIN.STR,\n    [FORM_KEYS.OPPONENT_RATING]: \"\",\n    [FORM_KEYS.OPPONENT_RATING_VALID]: true,\n    [FORM_KEYS.RATING_CHANGE]: NaN,\n    reactKey: generateUuid()\n})\n\nconst initialState = {\n    form: {\n        [FORM_KEYS.MY_RATING]: \"\",\n        [FORM_KEYS.MY_RATING_VALID]: true,\n        [FORM_KEYS.TIME_CONTROL]: \"\",\n        [FORM_KEYS.TIME_CONTROL_VALID]: true\n    },\n    gameCards: [\n        createNewGameCard(),\n        createNewGameCard()\n    ],\n    totalRatingChange: NaN\n}\n\nconst batchReducer = (state = initialState, {type: actionType, payload = {}}) => {\n    const actionHandler = {\n        [BATCH_ACTION_TYPES.SET_BATCH_FORM_DATA]: {\n            ...state,\n            form: {\n                ...state.form,\n                [payload.key]: payload.value\n            }\n        },\n        [BATCH_ACTION_TYPES.SET_TOTAL_RATING_CHANGE]: {\n            ...state,\n            totalRatingChange: payload\n        },\n        [BATCH_ACTION_TYPES.RESET_ALL_RATING_CHANGES]: {\n            ...state,\n            gameCards: state.gameCards.map(card => {\n                return {...card, ratingChange: NaN}\n            }),\n            totalRatingChange: NaN\n        },\n        [BATCH_ACTION_TYPES.SET_GAME_DATA]: {\n            ...state,\n            gameCards: state.gameCards.map((card, i) => {\n                return i === payload.gameNumber ?\n                    {\n                        ...card,\n                        [payload.key]: payload.value\n                    }\n                    :\n                    card\n            })\n        },\n        [BATCH_ACTION_TYPES.ADD_GAME]: {\n            ...state,\n            gameCards: [...state.gameCards, createNewGameCard()]\n        },\n        [BATCH_ACTION_TYPES.REMOVE_GAME]: {\n            ...state,\n            gameCards: state.gameCards.filter((_, i) => i !== payload.gameNumber)\n        }\n    }\n    return actionHandler[actionType] || state\n}\n\nexport default batchReducer","import {combineReducers} from \"redux\";\nimport oneVsOneReducer from \"./oneVsOne/oneVsOne.reducer\";\nimport batchReducer from \"./batch/batch.reducer\";\n\nconst rootReducer = combineReducers({\n    oneVsOne: oneVsOneReducer,\n    batch: batchReducer\n})\n\nexport default rootReducer","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./root.reducer\";\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk)))\n\nexport default store","import {scores, ratingDifferenceLimits, timeControls, bonus, KLimits, changeCoefficients} from '../constants/rating'\n\nconst getScore = score => {\n    return typeof score === \"string\" ?\n        scores[score.toUpperCase()].NUM\n        :\n        score\n}\n\n/*\n* difference (D) between player 2 rating and player 1 rating (player 2 - player 1)\n* if the difference is greater than 375 and less than 750, then D = 375\n* if the difference is greater than 750, then D = 400\n* same thing for negative D\n* */\nconst calculateDifference = (player1Rating, player2Rating) => {\n    let d = player2Rating - player1Rating\n    if (d > ratingDifferenceLimits.UPPER.LIMIT) {\n        d = ratingDifferenceLimits.UPPER.D\n    } else if (d > ratingDifferenceLimits.LOWER.LIMIT && d < ratingDifferenceLimits.UPPER.LIMIT){\n        d = ratingDifferenceLimits.LOWER.D\n    }\n\n    if (d < -ratingDifferenceLimits.UPPER.LIMIT){\n        d = -ratingDifferenceLimits.UPPER.D\n    } else if (d > -ratingDifferenceLimits.UPPER.LIMIT && d < -ratingDifferenceLimits.LOWER.LIMIT){\n        d = -ratingDifferenceLimits.LOWER.D\n    }\n    return d\n}\n\n/*\n* bonus (B) for coming to the game (small number)\n* if the player's rating is greater then or equal to 2300 then B = 0\n* else, if the time control is classical then B = (2300 - player1Rating) / 2000\n*       else B = (2300 - player1Rating) / 4000\n*/\nconst calculateBonus = (player1Rating, timeControl) => {\n    let b\n    if (player1Rating >= bonus.LIMIT){\n        b = bonus.NO_BONUS\n    } else {\n        if (timeControl.toLowerCase() === timeControls.CLASSICAL){\n            b = (bonus.LIMIT - player1Rating) / bonus.DIVIDERS.CLASSICAL\n        } else {\n            b = (bonus.LIMIT - player1Rating) / bonus.DIVIDERS.REST\n        }\n    }\n\n    return b\n}\n\n/*\n* Get coefficient (K) of the player by the following table:\n*   |           |classical|middle|rapid|\n*   |2200 and up|    10   |   6  |  3  |\n*   | 1750-2199 |    12   |   8  |  5  |\n*   | 1550-1749 |    14   |  10  |  7  |\n*   | 1200-1549 |    14   |  11  |  8  |\n* */\nconst getCoefficientK = (player1Rating, timeControl) => {\n    let k\n    const timeControlUpper = timeControl.toUpperCase()\n    if(player1Rating >= KLimits.MAX.LIMIT){\n        k = KLimits.MAX[timeControlUpper]\n    } else if (player1Rating >= KLimits.HIGH.LIMIT && player1Rating < KLimits.MAX.LIMIT){\n        k = KLimits.HIGH[timeControlUpper]\n    } else if (player1Rating >= KLimits.LOW.LIMIT && player1Rating < KLimits.HIGH.LIMIT){\n        k = KLimits.LOW[timeControlUpper]\n    } else {\n        k = KLimits.MIN[timeControlUpper]\n    }\n    return k\n}\n\n/*\n* Sanitize the time control\n* input can be time separated by + where the left is minutes and right is increment in seconds, for example 15+5\n* input can also be a string in ['classical', 'middle', 'rapid']\n* time control us calculated as follows:\n*   classical - at least 120 minutes per player for the first 60 moves (for example 90+30)\n*   middle - at least 60 minutes per player for the first 60 moves, but less than 120 minutes (for example 50+10)\n*   rapid - at least 20 minutes per player for the first 60 moves, but less than 60 minutes (for example 15+5)\n*/\nconst sanitizeTimeControl = timeControl => {\n    let [minutes, seconds] = timeControl.split(timeControls.SEPARATOR)\n    minutes = Number(minutes)\n    seconds = Number(seconds)\n    if (Number.isNaN(minutes) || Number.isNaN(seconds)){\n        // Assuming valid input\n        return timeControl\n    }\n    const totalMinutesIn60Moves = minutes + seconds\n    if (totalMinutesIn60Moves >= timeControls.MINUTES_IN_60_MOVES.CLASSICAL){\n        return timeControls.CLASSICAL\n    } else if (totalMinutesIn60Moves >= timeControls.MINUTES_IN_60_MOVES.MIDDLE){\n        return timeControls.MIDDLE\n    } else if (totalMinutesIn60Moves >= timeControls.MINUTES_IN_60_MOVES.RAPID){\n        return timeControls.RAPID\n    } else {\n        console.log(\"Time control of less than 20 minutes per player for the first 60 moves is unsupported\")\n    }\n}\n\n/*\n* Calculate the change of rating of player 1\n* Formula for calculating the change:\n* Change = (K * (P * 2) - 1)) + (K * D / 400) + B\n* Where: P = 0 or 0.5 or 1 (the score of player 1 in the game)\n*        D = difference between player 2 rating and player 1 rating (player2 - player1)\n*            if the difference is greater than 375 and less than 750, then D = 375\n*            if the difference is greater than 750, then D = 400\n*            same thing for negative D\n*        B = bonus for coming to the game (small number)\n*            if the player's rating is greater then or equal to 2300 then B = 0\n*            else, if the time control is classical then B = (2300 - player1Rating) / 2000\n*            else B = (2300 - player1Rating) / 4000\n*        K = coefficient determined by the table:\n*            |           |classical|middle|rapid|\n*            |2200 and up|    10   |   6  |  3  |\n*            | 1750-2199 |    12   |   8  |  5  |\n*            | 1550-1749 |    14   |  10  |  7  |\n*            | 1200-1549 |    14   |  11  |  8  |\n*/\nexport const calculateRatingChange = (player1Rating, player2Rating, timeControl, score) => {\n    const timeControlSanitized = sanitizeTimeControl(timeControl)\n    const p = getScore(score)\n    const d = calculateDifference(player1Rating, player2Rating)\n    const b = calculateBonus(player1Rating, timeControlSanitized)\n    const k = getCoefficientK(player1Rating, timeControlSanitized)\n    return (k * ((p * changeCoefficients.MULTIPLIER) - changeCoefficients.SUBTRACT)) + (k * d / changeCoefficients.DIVIDER) + b\n}","import { v4 as uuidv4 } from 'uuid';\n\nexport const capitalizeFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nexport const round = (rating, precision = 1) => {\n    const multiplier = Math.pow(10, precision)\n    return Math.round(rating * multiplier) / multiplier\n}\n\nexport const generateUuid = () => {\n    return uuidv4()\n}","const regexValues = {\n    VALID_RATING: /^(1[2-9]|[2-9]\\d)\\d\\d$/,\n    VALID_TIME_CONTROL: /^[1-9]\\d*\\s*\\+\\s*\\d+$/\n}\n\nexport const isRatingValid = value => {\n    return !!value.match(regexValues.VALID_RATING)\n}\n\nexport const isTimeControlValid = value => {\n    return !!value.match(regexValues.VALID_TIME_CONTROL)\n}"],"names":["useStyles","makeStyles","theme","win","color","WIN_COLOR","tie","TIE_COLOR","loss","LOSS_COLOR","checked","value","handleClick","score","gameNumber","classes","ratingChange","useSelector","batch","gameCards","FORM_KEYS","totalRatingChange","handleClickLocal","useCallback","Radio","onClick","root","setBatchFormData","payload","type","BATCH_ACTION_TYPES","setTotalRatingChange","setGameData","firstRadio","marginLeft","dispatch","useDispatch","key","NaN","FormControlLabel","control","scores","label","capitalizeFirstLetter","labelPlacement","className","width","margin","spacing","position","title","fontSize","clearButton","right","top","icon","height","listItem","paddingLeft","paddingBottom","opponentRating","opponentRatingValid","handleOpponentRatingChange","e","target","focusOutHandler","isRatingValid","trim","handleRemove","Card","variant","CardContent","Typography","gutterBottom","IconButton","size","component","Clear","TextField","INPUTS","onChange","onBlur","error","helperText","ERROR_MSG","List","ListItem","ResultIcon","list","ListItemText","primary","secondary","Result","result","round","maxWidth","backgroundColor","palette","background","paper","text","textAlign","totalRatingChangeRounded","ListItemAvatar","Avatar","Functions","display","marginTop","addButton","submitButton","divider","marginBottom","formValues","form","shallowEqual","gameCardsList","gameCardsComponents","map","card","i","reactKey","commonChangeHandlerHandler","formKey","commonFocusOutHandler","validationFn","stateKey","stateKeyValid","handleMyRatingFocusOut","handleMyRatingChange","handleTimeControlFocusOut","isTimeControlValid","handleTimeControlChange","handleSubmit","myRating","timeControl","myRatingValid","timeControlValid","allOpponentRatingsValid","reduce","totalValid","allInputsAreValid","totalRatingChangeCalculated","calculateRatingChange","acc","handleAddCard","noValidate","autoComplete","placeholder","Button","startIcon","Add","Fragment","Divider","store","NavBar","flexGrow","menuButton","marginRight","link","textDecoration","React","anchorEl","setAnchorEl","open","handleClose","edge","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","to","routes","resultClassName","resultWithSign","MY_RATING","OPPONENT_RATING","TIME_CONTROL","TIME_CONTROL_PLACEHOLDER","SUBMIT","ADD","RATING","WIN","STR","NUM","TIE","LOSS","ratingDifferenceLimits","UPPER","LIMIT","D","LOWER","timeControls","CLASSICAL","MIDDLE","RAPID","SEPARATOR","MINUTES_IN_60_MOVES","bonus","NO_BONUS","DIVIDERS","REST","KLimits","MAX","HIGH","LOW","MIN","changeCoefficients","DIVIDER","MULTIPLIER","SUBTRACT","MY_RATING_VALID","OPPONENT_RATING_VALID","TIME_CONTROL_VALID","RATING_CHANGE","SET_BATCH_FORM_DATA","SET_TOTAL_RATING_CHANGE","RESET_ALL_RATING_CHANGES","SET_GAME_DATA","ADD_GAME","REMOVE_GAME","ONE_VS_ONE_ACTION_TYPES","SET_ONE_VS_ONE_FORM_DATA","SET_RATING_CHANGE","initialState","state","actionType","actionHandler","createNewGameCard","generateUuid","filter","_","combineReducers","oneVsOne","oneVsOneReducer","batchReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","player1Rating","player2Rating","timeControlSanitized","split","minutes","seconds","Number","isNaN","totalMinutesIn60Moves","console","log","sanitizeTimeControl","p","toUpperCase","getScore","d","calculateDifference","b","toLowerCase","calculateBonus","k","timeControlUpper","getCoefficientK","string","charAt","slice","rating","precision","multiplier","Math","pow","uuidv4","regexValues","match"],"sourceRoot":""}